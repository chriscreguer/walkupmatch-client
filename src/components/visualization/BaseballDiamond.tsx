import React, { useRef, useEffect, useState } from 'react';
import { Player } from '@/lib/mlb/types';

interface BaseballDiamondProps {
  players: Player[];
  loading?: boolean;
}

// Positions based on standard baseball field positioning
const POSITIONS: Record<string, { x: number, y: number, anchor: 'left' | 'center' | 'right' }> = {
  'SP': { x: 234, y: 130, anchor: 'center' },   // Pitcher's mound (center of infield)
  'C': { x: 234, y: 210, anchor: 'center' },    // Catcher (behind home plate)
  '1B': { x: 440, y: 130, anchor: 'right' },    // First baseman (near first base)
  '2B': { x: 350, y: 90, anchor: 'right' },    // Second baseman (right of second base)
  '3B': { x: 20, y: 120, anchor: 'left' },     // Third baseman (near third base)
  'SS': { x: 84, y: 90, anchor: 'left' },     // Shortstop (left of second base)
  'LF': { x: 40, y: 40, anchor: 'left' },      // Left fielder (left outfield)
  'CF': { x: 224, y: 10, anchor: 'center' },    // Center fielder (center outfield)
  'RF': { x: 418, y: 40, anchor: 'right' },     // Right fielder (right outfield)
  'DH': { x: 380, y: 190, anchor: 'right' },    // Designated hitter (dugout area)
  'RP': { x: 10, y: 160, anchor: 'left' },      // Relief pitchers (bullpen area)
  'RP2': { x: 10, y: 180, anchor: 'left' },     // Relief pitcher 2
  'RP3': { x: 10, y: 200, anchor: 'left' },     // Relief pitcher 3
  'RP4': { x: 10, y: 220, anchor: 'left' },     // Relief pitcher 4
  'RP5': { x: 10, y: 240, anchor: 'left' },     // Relief pitcher 5
};

// Helper to find a player by position
const findPlayerByPosition = (players: Player[], position: string): Player | undefined => {
  return players.find(player => player.position === position);
};

const BaseballDiamond: React.FC<BaseballDiamondProps> = ({ players, loading = false }) => {
  const svgRef = useRef<SVGSVGElement>(null);
  const [textWidths, setTextWidths] = useState<Record<string, number>>({});
 
  useEffect(() => {
    if (!svgRef.current) return;

    // Measure all text elements
    const measurements: Record<string, number> = {};
    Object.keys(POSITIONS).forEach(position => {
      const textElement = svgRef.current?.querySelector(`#text-${position}`) as SVGTextElement;
      if (textElement) {
        const bbox = textElement.getBBox();
        measurements[position] = bbox.width; // Store actual width
      }
    });

    setTextWidths(measurements);
  }, [players]);

  return (
    <div className="relative w-full justify-center flex items-center">
      {/* Base diamond shape with integrated player markers */}
      <svg ref={svgRef} width="448" height="269" viewBox="0 0 448 269" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M191.493 262.323C200.904 266.682 212.538 268.963 224 269C235.462 268.963 247.096 266.682 256.507 262.323C263.265 259.192 267.42 256.387 284.376 243.509C320.55 216.034 327.048 211.11 337.563 203.212C343.519 198.738 351.906 192.401 356.2 189.131C360.494 185.861 367.097 180.863 370.874 178.023C374.65 175.184 385.201 167.232 394.32 160.353C403.439 153.474 416.589 143.563 423.542 138.329L424.888 137.316C436.935 128.247 438.844 126.81 440.469 125.236C440.833 124.883 441.184 124.523 441.631 124.068C445.839 119.791 447.991 114.654 448 108.871C448.006 104.751 447.458 102.381 445.573 98.3718C444.363 95.7981 438.081 88.7403 436.404 87.1689C435.752 86.5577 435.288 86.0921 434.811 85.6141L434.797 85.6004L434.795 85.5981C434.052 84.8522 433.273 84.0713 431.701 82.6545C415.598 68.1432 391.83 52.2313 371.599 42.4189C351.16 32.5057 331.566 25.6169 309.666 20.6439C282.645 14.508 263.017 12.0661 234.156 11.2501C229.953 11.1312 226.083 11.037 224 11C221.917 11.037 218.047 11.1312 213.844 11.2501C184.983 12.0661 165.355 14.508 138.334 20.6439C116.434 25.6169 96.8403 32.5057 76.4014 42.4189C56.1703 52.2313 32.4021 68.1432 16.2991 82.6545C14.7253 84.0727 13.9468 84.8537 13.2025 85.6004L13.1995 85.6036C12.7193 86.085 12.253 86.553 11.5958 87.1689C9.91916 88.7403 3.63658 95.7981 2.42669 98.3718C0.541645 102.381 -0.0059001 104.751 4.7817e-05 108.871C0.00880136 114.654 2.1615 119.791 6.36881 124.068L6.58069 124.284C6.93117 124.64 7.22632 124.941 7.53146 125.236C9.15479 126.809 11.063 128.246 23.0953 137.303L24.4583 138.329C31.4109 143.563 44.5608 153.474 53.6798 160.353C62.7993 167.232 73.3501 175.184 77.1264 178.023C80.9031 180.863 87.5058 185.861 91.8 189.131C96.0938 192.401 104.481 198.738 110.438 203.212C120.952 211.11 127.45 216.034 163.624 243.509C180.58 256.387 184.734 259.192 191.493 262.323Z" fill="#DADADA"/>
        <path d="M191.493 254.349C200.904 258.691 212.538 260.964 224 261C235.462 260.964 247.096 258.691 256.507 254.349C263.265 251.23 267.42 248.436 284.376 235.608C320.55 208.239 327.048 203.335 337.563 195.467C343.519 191.01 351.906 184.698 356.2 181.441C360.494 178.184 367.097 173.204 370.874 170.376C374.65 167.547 385.201 159.627 394.32 152.774C403.439 145.922 416.589 136.049 423.542 130.836L424.888 129.826C436.935 120.792 438.844 119.361 440.469 117.794C440.833 117.442 441.184 117.083 441.631 116.63C445.839 112.369 447.991 107.252 448 101.492C448.006 97.388 447.458 95.0268 445.573 91.0331C444.363 88.4694 438.081 81.439 436.404 79.8737C435.752 79.2649 435.288 78.801 434.811 78.3249L434.797 78.3112L434.795 78.309C434.052 77.5659 433.273 76.7881 431.701 75.3768C415.598 60.9217 391.83 45.0715 371.599 35.2971C351.16 25.4223 331.566 18.5602 309.666 13.6065C282.645 7.49437 263.017 5.06201 234.156 4.24914C229.953 4.13073 226.083 4.03683 224 4C221.917 4.03683 218.047 4.13073 213.844 4.24914C184.983 5.06201 165.355 7.49437 138.334 13.6065C116.434 18.5602 96.8403 25.4223 76.4014 35.2971C56.1703 45.0715 32.4021 60.9217 16.2991 75.3768C14.7253 76.7894 13.9468 77.5675 13.2025 78.3112L13.1995 78.3144C12.7193 78.794 12.253 79.2602 11.5958 79.8737C9.91916 81.439 3.63658 88.4694 2.42669 91.0331C0.541645 95.0268 -0.0059001 97.388 4.7817e-05 101.492C0.00880136 107.252 2.1615 112.369 6.36881 116.63L6.58069 116.845C6.93117 117.2 7.22632 117.499 7.53146 117.794C9.15479 119.36 11.063 120.791 23.0953 129.814L24.4583 130.836C31.4109 136.049 44.5608 145.922 53.6798 152.774C62.7993 159.627 73.3501 167.547 77.1264 170.376C80.9031 173.204 87.5058 178.184 91.8 181.441C96.0938 184.698 104.481 191.01 110.438 195.467C120.952 203.335 127.45 208.239 163.624 235.608C180.58 248.436 184.734 251.23 191.493 254.349Z" fill="white"/>
        <mask id="mask0_79_558" maskUnits="userSpaceOnUse" x="2" y="0" width="445" height="256">
          <path d="M191.976 249.373C201.312 253.698 212.853 255.962 224.225 255.998C235.596 255.962 247.137 253.698 256.473 249.373C263.179 246.266 267.301 243.483 284.122 230.705C320.01 203.443 326.456 198.557 336.887 190.721C342.796 186.281 351.117 179.994 355.377 176.749C359.637 173.505 366.187 168.545 369.934 165.727C373.68 162.91 384.148 155.02 393.195 148.194C402.242 141.368 415.287 131.535 422.185 126.341L423.52 125.336C435.472 116.337 437.366 114.911 438.977 113.35C439.339 113 439.687 112.642 440.131 112.191C444.305 107.947 446.44 102.849 446.449 97.1117C446.455 93.0239 445.912 90.672 444.041 86.6938C442.841 84.1401 436.609 77.1371 434.945 75.5779C434.298 74.9715 433.838 74.5094 433.364 74.0352L433.351 74.0215L433.349 74.0193C432.611 73.2791 431.839 72.5043 430.279 71.0985C414.304 56.6998 390.724 40.9114 370.653 31.1751C350.376 21.3388 330.938 14.5035 309.212 9.56902C282.405 3.48075 262.932 1.05787 234.3 0.24817C230.13 0.130225 226.291 0.0366873 224.225 0C222.158 0.0366873 218.319 0.130225 214.149 0.24817C185.516 1.05787 166.044 3.48075 139.237 9.56902C117.511 14.5035 98.0728 21.3388 77.7958 31.1751C57.7251 40.9114 34.1452 56.6998 18.1699 71.0985C16.6086 72.5057 15.8362 73.2807 15.0979 74.0215L15.0949 74.0247C14.6185 74.5024 14.1559 74.9668 13.5039 75.5779C11.8405 77.1371 5.60776 84.1401 4.40745 86.6938C2.53735 90.672 1.99415 93.0239 2.00005 97.1117C2.00873 102.849 4.14437 107.947 8.31833 112.191L8.52853 112.405C8.87623 112.759 9.16904 113.057 9.47176 113.35C11.0822 114.91 12.9753 116.336 24.9122 125.323L26.2645 126.341C33.1619 131.535 46.2076 141.368 55.2543 148.194C64.3015 155.02 74.7687 162.91 78.515 165.727C82.2618 168.545 88.8122 173.505 93.0724 176.749C97.3322 179.994 105.653 186.281 111.562 190.721C121.993 198.557 128.439 203.443 164.327 230.705C181.148 243.483 185.27 246.266 191.976 249.373Z" fill="white"/>
        </mask>
        <g mask="url(#mask0_79_558)">
          <path d="M2 -107.388H34.4583V360.738H2V-107.388Z" fill="#89AE3F"/>
          <path d="M33.4661 -107.388H54.5236V360.738H33.4661V-107.388Z" fill="#7FA740"/>
          <path d="M53.5315 -107.388H74.589V360.738H53.5315V-107.388Z" fill="#89AE3F"/>
          <path d="M73.5969 -107.388H94.6544V360.738H73.5969V-107.388Z" fill="#7FA740"/>
          <path d="M93.6623 -107.388H114.72V360.738H93.6623V-107.388Z" fill="#89AE3F"/>
          <path d="M113.728 -107.388H134.785V360.738H113.728V-107.388Z" fill="#7FA740"/>
          <path d="M133.793 -107.388H154.851V360.738H133.793V-107.388Z" fill="#89AE3F"/>
          <path d="M153.859 -107.388H174.916V360.738H153.859V-107.388Z" fill="#7FA740"/>
          <path d="M173.924 -107.388H194.981V360.738H173.924V-107.388Z" fill="#89AE3F"/>
          <path d="M193.989 -107.388H215.047V360.738H193.989V-107.388Z" fill="#7FA740"/>
          <path d="M214.055 -107.388H235.112V360.738H214.055V-107.388Z" fill="#89AE3F"/>
          <path d="M234.12 -107.388H255.178V360.738H234.12V-107.388Z" fill="#7FA740"/>
          <path d="M254.186 -107.388H275.243V360.738H254.186V-107.388Z" fill="#89AE3F"/>
          <path d="M274.251 -107.388H295.309V360.738H274.251V-107.388Z" fill="#7FA740"/>
          <path d="M294.316 -107.388H315.374V360.738H294.316V-107.388Z" fill="#89AE3F"/>
          <path d="M314.382 -107.388H335.439V360.738H314.382V-107.388Z" fill="#7FA740"/>
          <path d="M334.447 -107.388H355.505V360.738H334.447V-107.388Z" fill="#89AE3F"/>
          <path d="M354.513 -107.388H375.57V360.738H354.513V-107.388Z" fill="#7FA740"/>
          <path d="M374.578 -107.388H395.636V360.738H374.578V-107.388Z" fill="#89AE3F"/>
          <path d="M394.643 -107.388H415.701V360.738H394.643V-107.388Z" fill="#7FA740"/>
          <path d="M414.709 -107.388H435.766V360.738H414.709V-107.388Z" fill="#89AE3F"/>
          <path d="M434.774 -107.388H455.832V360.738H434.774V-107.388Z" fill="#7FA740"/>
        </g>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M258.061 216.012C258.061 228.886 242.731 239.323 223.821 239.323C204.911 239.323 189.582 228.886 189.582 216.012C189.582 212.672 190.941 209.497 192.799 206.625L88.7012 135.752C101.876 118.177 143.163 74.729 223.362 74.729C303.561 74.729 346.992 117.91 358.482 135.439L254.844 206.134C256.908 209.133 258.061 212.481 258.061 216.012ZM203.829 197.085C209.454 194.326 216.359 192.7 223.821 192.7C231.28 192.7 238.182 194.324 243.806 197.081L297.586 160.002C290.968 155.496 294.828 150.093 297.586 147.955L232.324 108.842C225.154 112.847 217.847 110.511 215.089 108.842L149.137 148.112C155.02 152.117 150.976 157.188 148.218 159.223L203.829 197.085Z" fill="#EBAC45"/>
        <mask id="mask1_79_558" maskUnits="userSpaceOnUse" x="2" y="0" width="445" height="256">
          <path d="M191.976 249.373C201.312 253.698 212.853 255.962 224.225 255.998C235.596 255.962 247.137 253.698 256.473 249.373C263.179 246.266 267.301 243.483 284.122 230.705C320.01 203.443 326.456 198.557 336.887 190.721C342.796 186.281 351.117 179.994 355.377 176.749C359.637 173.505 366.187 168.545 369.934 165.727C373.68 162.91 384.148 155.02 393.195 148.194C402.242 141.368 415.287 131.535 422.185 126.341L423.52 125.336C435.472 116.337 437.366 114.911 438.977 113.35C439.339 113 439.687 112.642 440.131 112.191C444.305 107.947 446.44 102.849 446.449 97.1117C446.455 93.0239 445.912 90.672 444.041 86.6938C442.841 84.1401 436.609 77.1371 434.945 75.5779C434.298 74.9715 433.838 74.5094 433.364 74.0352L433.351 74.0215L433.349 74.0193C432.611 73.2791 431.839 72.5043 430.279 71.0985C414.304 56.6998 390.724 40.9114 370.653 31.1751C350.376 21.3388 330.938 14.5035 309.212 9.56903C282.405 3.48075 262.932 1.05787 234.3 0.24817C230.13 0.130225 226.291 0.0366873 224.225 0C222.158 0.0366873 218.319 0.130225 214.149 0.24817C185.516 1.05787 166.044 3.48075 139.237 9.56903C117.511 14.5035 98.0728 21.3388 77.7958 31.1751C57.7251 40.9114 34.1452 56.6998 18.1699 71.0985C16.6086 72.5057 15.8362 73.2807 15.0979 74.0215L15.0949 74.0247C14.6185 74.5024 14.1559 74.9668 13.5039 75.5779C11.8405 77.1371 5.60776 84.1401 4.40745 86.6938C2.53735 90.672 1.99415 93.0239 2.00005 97.1117C2.00873 102.849 4.14437 107.947 8.31833 112.191L8.52853 112.405C8.87623 112.759 9.16904 113.057 9.47176 113.35C11.0822 114.91 12.9753 116.336 24.9122 125.323L26.2645 126.341C33.1619 131.535 46.2076 141.368 55.2543 148.194C64.3015 155.02 74.7687 162.91 78.515 165.727C82.2618 168.545 88.8122 173.505 93.0724 176.749C97.3322 179.994 105.653 186.281 111.562 190.721C121.993 198.557 128.439 203.443 164.327 230.705C181.148 243.483 185.27 246.266 191.976 249.373Z" fill="white"/>
        </mask>
        <g mask="url(#mask1_79_558)">
          <path d="M13 74.5L209.5 207.5" stroke="white" stroke-width="2"/>
          <path d="M440.5 70.5L239 206.946" stroke="white" stroke-width="2"/>
          <path d="M217.75 221V207.1C217.75 207.045 217.705 207 217.65 207H209.1C209.045 207 209 207.045 209 207.1V220.9C209 220.955 209.045 221 209.1 221H217.75ZM217.75 221V227.9C217.75 227.955 217.795 228 217.85 228H230.15C230.205 228 230.25 227.955 230.25 227.9V221M230.25 221V207.1C230.25 207.045 230.295 207 230.35 207H238.9C238.955 207 239 207.045 239 207.1V220.9C239 220.955 238.955 221 238.9 221H230.25Z" stroke="white" stroke-width="2"/>
          <path d="M220 213C220 212.448 220.448 212 221 212H227C227.552 212 228 212.448 228 213V215.861C228 216.2 227.829 216.516 227.544 216.7L224.544 218.647C224.213 218.862 223.787 218.862 223.456 218.647L220.456 216.7C220.171 216.516 220 216.2 220 215.861V213Z" fill="white"/>
          <rect width="8.94782" height="8.94782" rx="1" transform="matrix(0.826608 -0.562778 0.826608 0.562778 129.984 153.984)" fill="white"/>
          <rect width="9.25175" height="9.25175" rx="1" transform="matrix(0.826608 -0.562778 0.826608 0.562778 215.757 102.123)" fill="white"/>
          <rect width="9.25175" height="9.25175" rx="1" transform="matrix(0.826608 -0.562778 0.826608 0.562778 301.574 153.842)" fill="white"/>
          <ellipse cx="224" cy="156" rx="16" ry="11" fill="#EBAC45"/>
          <rect x="219" y="155" width="10" height="2" rx="0.5" fill="white"/>
        </g>
        
        {/* Player markers added as SVG elements */}
        {Object.keys(POSITIONS).map(position => {
          const player = findPlayerByPosition(players, position);
          if (!player) return null;
          
          const { x, y, anchor } = POSITIONS[position];
          const width = Math.max(textWidths[position]); // Use measured width or fallback to 120
          
          return (
            <g key={position} transform={`translate(${x}, ${y})`}>
              {/* Player name tag with background */}
              <g transform={`translate(${anchor === 'left' ? -5 : anchor === 'right' ? 5 : 0}, 15)`}>
                <rect 
                  x={anchor === 'left' ? 0 : anchor === 'right' ? -width : -width/2} 
                  y={0}
                  width={width} 
                  height={20} 
                  rx={3}
                  fill="white" 
                  stroke="#cccccc"
                  strokeWidth={1}
                />
                <text 
                  id={`text-${position}`}
                  x={anchor === 'left' ? 5 : anchor === 'right' ? -width + 5 : -width/2 + 5} 
                  y={14}
                  fontSize={12}
                  fontWeight="bold"
                  fill="rgba(0,0,0,0.7)"
                >
                  {/* <tspan fill="#555555">{position}</tspan>
                  <tspan dx="3"> </tspan> */}
                  <tspan>{player.name.split(' ')[0][0]}. {player.name.split(' ').slice(1).join(' ')}</tspan>
                </text>
              </g>
            </g>
          );
        })}
      </svg>
    </div>
  );
};

export default BaseballDiamond;